// üìÅ glaucomaForm.tsx

import React, { useState } from 'react';

export default function GlaucomaForm() {
  const [form, setForm] = useState({
    nome: '',
    idade: '',
    olho: 'OD',
    historicoFamiliar: false,
    raca: '',
    ametropia: '',
    tipoAngulo: '',
    escavacao: '',
    pioManha: '',
    pioTarde: '',
    pioNoite: '',
    campoVisual: '',
    octRNFL: '',
    usaColirio: false,
    colirios: [],
    respostaPIO: '',
    efeitosAdversos: [],
    tratamentoAtual: '',
    tratamentoCirurgico: false,
    tratamentoLaser: false,
    indicacaoCirurgia: false,
    tipoGlaucoma: '',
    recomendacoes: []
  });

  const opcoes = {
    olhos: ['OD', 'OE'],
    racas: ['Branca', 'Negra', 'Asi√°tica', 'Parda'],
    ametropias: ['Miopia', 'Hipermetropia', 'Nenhuma'],
    angulos: ['Aberto', 'Fechado', 'Oclus√£o intermitente'],
    escavacoes: ['<0.3', '0.4', '0.5', '0.6', '0.7', '>0.8'],
    camposVisuais: ['Normal', 'Defeito arcuato', 'Escotoma paracentral', 'Defeito nasal', 'Generalizado'],
    octRNFL: ['Normal', 'Reduzido', 'Assim√©trico', 'Ausente'],
    colirios: [
      'Latanoprosta', 'Travoprosta', 'Timolol', 'Dorzolamida', 'Brimonidina',
      'Latanoprosta + Timolol', 'Dorzolamida + Timolol'
    ],
    respostasPIO: ['Reduziu PIO satisfatoriamente', 'Redu√ß√£o insuficiente', 'PIO inalterada'],
    efeitosAdversos: ['Hiperemia', 'Irrita√ß√£o ocular', 'Crescimento de c√≠lios', 'Desconforto geral'],
    tiposGlaucoma: [
      'Prim√°rio de √¢ngulo aberto',
      'Prim√°rio de √¢ngulo fechado',
      'Cong√™nito',
      'Pseudoesfoliativo',
      'Pigmentar',
      'Secund√°rio a trauma',
      'Secund√°rio inflamat√≥rio'
    ],
    recomendacoes: [
      'Iniciar col√≠rio an√°logo de prostaglandina',
      'Associar beta-bloqueador',
      'Trocar para combina√ß√£o fixa',
      'Considerar SLT (laser)',
      'Encaminhar para cirurgia (trabeculectomia ou MIGS)',
      'Manter acompanhamento cl√≠nico com curva tensional'
    ]
  };

  const gerarCurvaTensional = () => {
    const valores = [form.pioManha, form.pioTarde, form.pioNoite].map(v => parseFloat(v)).filter(Boolean);
    if (valores.length < 2) return '';
    const max = Math.max(...valores);
    const min = Math.min(...valores);
    const oscilacao = max - min;
    return `Curva tensional com varia√ß√£o de ${oscilacao.toFixed(1)} mmHg (${valores.join(' / ')}). ${oscilacao >= 5 ? 'Sugere risco aumentado de progress√£o.' : 'Oscila√ß√£o dentro da normalidade.'}`;
  };

  const gerarLaudo = () => {
    const curva = gerarCurvaTensional();
    const colirios = form.usaColirio ? `Em uso de col√≠rio(s): ${form.colirios.join(', ')}. Resposta: ${form.respostaPIO}.` : 'Sem uso atual de col√≠rios.';
    const efeitos = form.efeitosAdversos.length ? `Efeitos adversos: ${form.efeitosAdversos.join(', ')}.` : '';

    return `Paciente ${form.nome}, ${form.idade} anos, olho ${form.olho}.

Hist√≥rico familiar: ${form.historicoFamiliar ? 'positivo' : 'negativo'}.
Ra√ßa: ${form.raca}. Ametropia: ${form.ametropia}.
Tipo do √¢ngulo: ${form.tipoAngulo}.
Escava√ß√£o do disco: ${form.escavacao}. Campo visual: ${form.campoVisual}.
OCT RNFL: ${form.octRNFL}.

${curva}
${colirios}
${efeitos}

Tipo de glaucoma suspeito: ${form.tipoGlaucoma}.
Tratamentos pr√©vios: ${form.tratamentoAtual}.
Tratamento cir√∫rgico indicado: ${form.indicacaoCirurgia ? 'Sim' : 'N√£o'}.

Conduta sugerida: ${form.recomendacoes.join(', ')}.`;
  };

  return (
    <div>
      <h2>Formul√°rio Glaucoma</h2>
      {/* Renderiza√ß√£o dos campos - usar interface modular com selects e checkboxes */}
      <button onClick={() => alert(gerarLaudo())}>Gerar Laudo</button>
    </div>
  );
}
